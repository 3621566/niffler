plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'guru.qa'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    autoconfigure = true
    version = '2.20.1'
}

ext {
    lombokVersion = '1.18.24'
    allureVersion = '2.20.1'
    jacksonVersion = '2.14.1'
}

dependencies {
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    implementation "org.junit.jupiter:junit-jupiter:5.9.2",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
            "com.codeborne:selenide:6.11.1",
            "io.rest-assured:rest-assured:5.3.0",
            "com.github.javafaker:javafaker:1.0.2",
            "io.qameta.allure:allure-selenide:${allureVersion}",
            "io.qameta.allure:allure-rest-assured:${allureVersion}",
            "org.aeonbits.owner:owner:1.0.12",
            "com.squareup.retrofit2:retrofit:2.9.0",
            "com.squareup.retrofit2:converter-jackson:2.9.0",
            "com.squareup.okhttp:logging-interceptor:2.7.5",
            "org.springframework:spring-jdbc:6.0.4",
            "org.postgresql:postgresql:42.5.3",
            "p6spy:p6spy:3.9.1",
            "org.hibernate:hibernate-core:6.1.7.Final",
            "io.qameta.allure:allure-attachments:2.21.0",
            "com.github.vertical-blank:sql-formatter:2.0.3"
    implementation "org.junit.jupiter:junit-jupiter:5.9.2"
    implementation("io.qameta.allure:allure-junit5:2.21.0") {
        exclude group: "org.junit.platform"
        exclude group: "org.junit.jupiter-api"
        exclude group: "org.junit.jupiter"
    }
}


test {
    useJUnitPlatform {
        includeTags(System.getProperty('tag', 'NONE'))
    }
}

task prepareKotlinBuildScriptModel {

}